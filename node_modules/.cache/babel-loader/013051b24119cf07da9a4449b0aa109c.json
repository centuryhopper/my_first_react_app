{"ast":null,"code":"import _objectSpread from\"/Users/leozhang/Desktop/React practice/recent_files/using-pre-built-react-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/leozhang/Desktop/React practice/recent_files/using-pre-built-react-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Fab from'@material-ui/core/Fab';import AddIcon from'@material-ui/icons/Add';import Zoom from'@material-ui/core/Zoom';import'../styles.css';// jshint ignore : start\nfunction CreateArea(props){var _useState=useState({title:\"\",content:\"\"}),_useState2=_slicedToArray(_useState,2),note=_useState2[0],setNote=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),noteFlag=_useState4[0],SetNoteFlag=_useState4[1];function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setNote(function(prevNote){return _objectSpread(_objectSpread({},prevNote),{},{[name]:value});});}function submitNote(event){props.onAdd(note);setNote({title:\"\",content:\"\"});event.preventDefault();}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{className:\"create-note\"},noteFlag&&/*#__PURE__*/React.createElement(\"input\",{name:\"title\",onChange:handleChange,value:note.title,placeholder:\"Title\"}),/*#__PURE__*/React.createElement(\"textarea\",{onClick:function onClick(){return SetNoteFlag(true);},name:\"content\",onChange:handleChange,value:note.content,placeholder:\"Take a note...\"// use ternary here 1 row vs 3 row\n,rows:noteFlag?\"3\":\"1\"}),/*#__PURE__*/React.createElement(Zoom,{in:noteFlag},/*#__PURE__*/React.createElement(Fab,{onClick:submitNote,\"aria-label\":\"add\"},/*#__PURE__*/React.createElement(AddIcon,null)))));}export default CreateArea;","map":{"version":3,"sources":["/Users/leozhang/Desktop/React practice/recent_files/using-pre-built-react-components/src/components/CreateArea.jsx"],"names":["React","useState","Fab","AddIcon","Zoom","CreateArea","props","title","content","note","setNote","noteFlag","SetNoteFlag","handleChange","event","target","name","value","prevNote","submitNote","onAdd","preventDefault"],"mappings":"qZAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAO,eAAP,CAGA;AAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CACA,eAC0BL,QAAQ,CAAC,CAC/BM,KAAK,CAAE,EADwB,CAE/BC,OAAO,CAAE,EAFsB,CAAD,CADlC,wCACSC,IADT,eACeC,OADf,8BAMkCT,QAAQ,CAAC,KAAD,CAN1C,yCAMSU,QANT,eAMmBC,WANnB,eAQE,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CACA,mBAC0BA,KAAK,CAACC,MADhC,CACUC,IADV,eACUA,IADV,CACgBC,KADhB,eACgBA,KADhB,CAGEP,OAAO,CAAC,SAAAQ,QAAQ,CAChB,CACE,sCACKA,QADL,MAEE,CAACF,IAAD,EAAQC,KAFV,GAID,CANM,CAAP,CAOD,CAED,QAASE,CAAAA,UAAT,CAAoBL,KAApB,CACA,CACER,KAAK,CAACc,KAAN,CAAYX,IAAZ,EACAC,OAAO,CAAC,CACNH,KAAK,CAAE,EADD,CAENC,OAAO,CAAE,EAFH,CAAD,CAAP,CAIAM,KAAK,CAACO,cAAN,GACD,CAED,mBACE,4CACE,4BAAM,SAAS,CAAC,aAAhB,EAIIV,QAAQ,eACV,6BACE,IAAI,CAAC,OADP,CAEE,QAAQ,CAAEE,YAFZ,CAGE,KAAK,CAAEJ,IAAI,CAACF,KAHd,CAIE,WAAW,CAAC,OAJd,EALF,cAaE,gCACE,OAAO,CAAE,yBAAMK,CAAAA,WAAW,CAAC,IAAD,CAAjB,EADX,CAEE,IAAI,CAAC,SAFP,CAGE,QAAQ,CAAEC,YAHZ,CAIE,KAAK,CAAEJ,IAAI,CAACD,OAJd,CAKE,WAAW,CAAC,gBACZ;AANF,CAOE,IAAI,CAAEG,QAAQ,CAAG,GAAH,CAAS,GAPzB,EAbF,cAyBE,oBAAC,IAAD,EAAM,EAAE,CAAEA,QAAV,eACE,oBAAC,GAAD,EAAK,OAAO,CAAEQ,UAAd,CAA0B,aAAW,KAArC,eAA2C,oBAAC,OAAD,MAA3C,CADF,CAzBF,CADF,CADF,CAiCD,CAED,cAAed,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Zoom from '@material-ui/core/Zoom';\nimport '../styles.css';\n\n\n// jshint ignore : start\n\nfunction CreateArea(props)\n{\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  const [noteFlag, SetNoteFlag] = useState(false);\n\n  function handleChange(event)\n  {\n    const { name, value } = event.target;\n\n    setNote(prevNote =>\n    {\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n\n  function submitNote(event)\n  {\n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <form className=\"create-note\">\n\n\n        {/* use ternary operator */}\n        { noteFlag &&\n        <input\n          name=\"title\"\n          onChange={handleChange}\n          value={note.title}\n          placeholder=\"Title\"\n        />}\n\n\n        <textarea\n          onClick={() => SetNoteFlag(true)}\n          name=\"content\"\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          // use ternary here 1 row vs 3 row\n          rows={noteFlag ? \"3\" : \"1\"}\n        />\n\n        {/* use ternary here */}\n\n        <Zoom in={noteFlag}>\n          <Fab onClick={submitNote} aria-label=\"add\"><AddIcon /></Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n"]},"metadata":{},"sourceType":"module"}